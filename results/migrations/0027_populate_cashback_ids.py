# Generated by Django 5.2.1 on 2025-08-25 05:28

from django.db import migrations


def populate_cashback_ids(apps, schema_editor):
    """Populate cashback_id for existing records"""
    DailyCashAwarded = apps.get_model('results', 'DailyCashAwarded')
    
    # Get all records without cashback_id
    records_without_id = DailyCashAwarded.objects.filter(cashback_id='')
    
    # Group by date to generate sequential IDs
    date_counters = {}
    
    for record in records_without_id.order_by('award_date', 'awarded_at'):
        date_str = record.award_date.strftime('%Y%m%d')
        
        # Initialize counter for this date if not exists
        if date_str not in date_counters:
            date_counters[date_str] = 0
        
        date_counters[date_str] += 1
        
        # Generate cashback ID: CB + YYYYMMDD + 3-digit sequential number
        cashback_id = f"CB{date_str}{date_counters[date_str]:03d}"
        
        # Update the record
        record.cashback_id = cashback_id
        record.save(update_fields=['cashback_id'])


def reverse_populate_cashback_ids(apps, schema_editor):
    """Reverse migration - clear cashback_ids"""
    DailyCashAwarded = apps.get_model('results', 'DailyCashAwarded')
    DailyCashAwarded.objects.all().update(cashback_id='')


class Migration(migrations.Migration):

    dependencies = [
        ("results", "0026_add_cashback_fields_step1"),
    ]

    operations = [
        migrations.RunPython(populate_cashback_ids, reverse_populate_cashback_ids),
    ]
